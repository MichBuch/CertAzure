trigger:
- main

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: UseDotNet@2
      inputs:
        version: '6.0.x' # Adjust to your .NET version
        includePreviewVersions: false

    - script: dotnet restore
      displayName: 'dotnet restore'

    - script: dotnet build --no-restore
      displayName: 'dotnet build'

    # Uncomment the following lines if you have tests
    #- script: dotnet test --no-build --verbosity normal
    #  displayName: 'dotnet test'

    - script: dotnet publish --no-build --configuration Release --output $(Build.ArtifactStagingDirectory)
      displayName: 'dotnet publish'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    environment: 'yourDeploymentEnvironmentName' # Define or replace with your Azure environment
    pool:
      vmImage: 'windows-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '<Your-Azure-Subscription-Service-Connection-Name>' # Create this in Azure DevOps Service Connections
              appType: 'webApp' # Use 'webAppLinux' for Linux
              appName: '<Your-App-Service-Name>' # The name of your Azure Web App
              runtimeStack: 'DOTNETCORE|6.0' # Match this with your project's target framework
              package: $(Pipeline.Workspace)/drop
